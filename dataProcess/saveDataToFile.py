#!/usr/bin/env python
#-*- coding:utf-8 -*-
#@Time:2020/7/314:52
#@Author:mery
#@File:saveDataToFile.py

# import xlsxwriter
from util.queryDB import query
import csv
import codecs
import sqlite3


#读取数据库中的内容并写入到文件中
def read_sql_to_csv(filename,sql):
    with codecs.open(filename=filename, mode='w',encoding='utf_8_sig') as f:
        write = csv.writer(f, dialect='excel')
        result = query(sql)
        for re in result:
            write.writerow(re)

#更新数据库中被保存到文件中的记录的状态
def update_flag(table_name):
    conn = sqlite3.connect("../bug.db")
    cur = conn.cursor()
    sql = "update %s set tag = '%s' where tag is null"%(table_name,"1")
    cur.execute(sql)
    conn.commit()
    conn.close()

#读取并保存区块链漏洞字库-外围系统漏洞数据记录到文件并更新记录状态
def save_outside_to_csv():
    sql = "select * from outsideChain where tag is null"
    read_sql_to_csv('../dataFile/outsideChain.csv', sql)
    update_flag("outsideChain")

#读取并保存区块链漏洞字库-联盟连漏洞数据记录到文件并更新记录状态
def save_union_to_csv():
    sql = "select * from uniChain where tag is null"
    read_sql_to_csv('../dataFile/unionChain.csv', sql)
    update_flag("uniChain")

#读取并保存区块链漏洞字库-公链漏洞数据记录到文件并更新记录状态
def save_pub_to_csv():
    sql = "select * from pubChain where tag is null"
    read_sql_to_csv('../dataFile/pubChain.csv', sql)
    update_flag("pubChain")

#读取并保存区块链漏洞字库-遗漏的漏洞数据记录到文件并更新记录状态
def save_other_to_csv():
    sql = "select * from otherChain where tag is null"
    read_sql_to_csv('../dataFile/otherChain.csv', sql)
    update_flag("otherChain")

#读取并保存常见数据库漏洞数据记录到文件并更新记录状态
def save_dbInfo_to_csv():
    sql = "select * from dbInfo where tag is null"
    read_sql_to_csv('../dataFile/dbInfo.csv', sql)
    update_flag("dbInfo")

#读取并保存加密算法漏洞数据记录到文件并更新记录状态
def save_encry_to_csv():
    sql = "select * from encryAlgoriithmInfo where tag is null"
    read_sql_to_csv('../dataFile/encryAlgorithmInfo.csv', sql)
    update_flag("encryAlgoriithmInfo")

#读取并保存区块链漏洞字库-常用组件漏洞数据记录到文件并更新记录状态
def save_frame_to_csv():
    sql = "select * from frameInfo where tag is null"
    read_sql_to_csv('../dataFile/frameInfo.csv', sql)
    update_flag("frameInfo")

#读取并保存函数及语言漏洞数据记录到文件并更新记录状态
def save_function_to_csv():
    sql = "select * from functionInfo where tag is null"
    read_sql_to_csv('../dataFile/functionInfo.csv', sql)
    update_flag("functionInfo")

#读取并保存常用操作系统漏洞数据记录到文件并更新记录状态
def save_operation_to_csv():
    sql = "select * from operationInfo where tag is null"
    read_sql_to_csv('../dataFile/operationInfo.csv', sql)
    update_flag("operationInfo")

def save_protocol_to_csv():
    sql = "select * from protocolInfo where tag is null"
    read_sql_to_csv('../dataFile/protocolInfo.csv', sql)
    update_flag("protocolInfo")

def save_server_to_csv():
    sql = "select * from serverInfo where tag is null"
    read_sql_to_csv('../dataFile/serverInfo.csv', sql)
    update_flag("serverInfo")

def save_tools_to_csv():
    sql = "select * from toolsInfo where tag is null"
    read_sql_to_csv('../dataFile/toolsInfo.csv', sql)
    update_flag("toolsInfo")

def main():
    save_pub_to_csv()
    save_union_to_csv()
    save_outside_to_csv()
    save_other_to_csv()
    save_encry_to_csv()
    save_dbInfo_to_csv()
    save_frame_to_csv()
    save_function_to_csv()
    save_operation_to_csv()
    save_protocol_to_csv()
    save_tools_to_csv()
    save_server_to_csv()


if __name__=="__main__":
    main()